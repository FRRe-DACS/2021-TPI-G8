{"version":3,"sources":["http-common.js","services/servicios.service.js","components/servicios.component.js","components/principal.component.js","components/logout.component.js","components/login.component.js","components/footer.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","data","post","dacsEmpresas","loginMinisterio","then","tkn","localStorage","setItem","token","getItem","ProductList","props","isChecked","setState","state","isHidden","retrieveProductos","bind","postRegistro","productos","currentIndex","this","PrincipalDataService","findAll","response","console","log","catch","e","class","for","map","producto","nombre","EAN","precioKG","cantidadP","cantidadV","type","className","id","onChange","Component","getNotificacion","sal","JSON","stringify","notif","parse","PrincipalPage","role","LogoutButton","logout","useAuth0","onClick","returnTo","window","location","origin","LoginButton","loginWithRedirect","style","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","children","href","App","isAuthenticated","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","clientId","redirectUri","useRefreshTokens","cacheLocation","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.409f6e0d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8000\", //You can change the baseURL that depends on REST APIs url that your Server configures.\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","//Desde aca se exporta el servicio y las funciones se corresponden a metodos axios permiten hacer http requests con operaciones crud\r\nimport http from \"../http-common\";\r\n\r\nclass PrincipalDataService {\r\n  findAll() {\r\n    return http.get(\"/getProductos\");\r\n  }\r\n//agregar variable de entrada token\r\n  postRegimen(data){\r\n    return http.post(\"/regimen?token=\" + data)\r\n  }\r\n}\r\n\r\nexport default new PrincipalDataService();","import dacsEmpresas from \"dacs-empresas\";\r\nimport React, { Component } from \"react\";\r\nimport PrincipalDataService from \"../services/servicios.service\";\r\nimport 'react-smart-data-table/dist/react-smart-data-table.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst api_login = 'https://cli-serv-grupo1.herokuapp.com/api/auth/login'\r\n\r\n\r\ndacsEmpresas.loginMinisterio(api_login, \"grupo8@frre.utn.edu.ar\",\"dacs-frre\").then().then(tkn => localStorage.setItem(\"token\", tkn));\r\nvar token = localStorage.getItem(\"token\")\r\n\r\n\r\nexport default class ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveProductos = this.retrieveProductos.bind(this);\r\n    this.postRegistro = this.postRegistro.bind(this);\r\n    this.isChecked=this.isChecked.bind(this);\r\n    this.state={isHidden : false } // button will not be hidden initally. \r\n    this.state = {\r\n      productos: [],\r\n      currentIndex: -1\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.retrieveProductos();\r\n  }\r\n\r\n  retrieveProductos() {\r\n    PrincipalDataService.findAll()\r\n      .then(response => {\r\n        this.setState({\r\n          productos: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  postRegistro(tkn) {\r\n   // PrincipalDataService.postRegimen(tkn);\r\n   console.log(tkn);\r\n  }\r\n\r\n   isChecked = () => {\r\n    this.setState((state)=>({isHidden : !state.isHidden})) \r\n   } \r\n\r\n  render() {\r\n    const {productos, currentIndex } = this.state;\r\n    const emptyTable = <div>There is no data available at the time.</div>\r\n    \r\n    const headers = {\r\n      columnKey: {\r\n        text: 'Column 1',\r\n        invisible: false,\r\n        sortable: true,\r\n        filterable: true,\r\n      },\r\n      'nested.columnKey': {\r\n        text: 'Nested Column',\r\n        invisible: false,\r\n        sortable: true,\r\n        filterable: true,\r\n      },\r\n      // If a dummy column is inserted into the data, it can be used to customize\r\n      // the table by allowing actions per row to be implemented, for example\r\n      tableActions: {\r\n        text: 'Actions',\r\n        invisible: false,\r\n        sortable: false,\r\n        filterable: false\r\n      },\r\n    }\r\n    return (\r\n        <main >\r\n                    <form>    \r\n                          <legend>Declaraci√≥n Jurada</legend>\r\n                          <div class=\"mb-3\">\r\n                            <label for=\"disabledTextInput\" class=\"form-label\">CUIT: 23-42450167-5</label>\r\n                          </div>\r\n                          <table data-table-name='test-fake-table' /* class=\"table table-stripped table-bordered table-sm\" */ class=\"ui compact selectable table\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>\r\n                                  <span>Nombre Producto</span>\r\n                                  <span class=\"rsdt \"></span>\r\n                                </th>\r\n                                <th>EAN</th>\r\n                                <th>Precio Unitario</th>\r\n                                <th>Cantidad Producida</th>\r\n                                <th>Cantidad Vendida</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {productos && productos.map((producto) => (\r\n                              <tr>\r\n                                <td>{producto.nombre}</td>\r\n                                <td>{producto.EAN}</td>\r\n                                <td>${producto.precioKG}</td>\r\n                                <td>{producto.cantidadP}</td>\r\n                                <td>{producto.cantidadV}</td>\r\n                              </tr> \r\n                                ))}\r\n\r\n                            </tbody>\r\n                          </table>\r\n\r\n                          <div class=\"mb-3\">\r\n                            <div class=\"form-check\">\r\n                                 <input type='checkbox' className='checkbox' id='termschkbx'  onChange={this.isChecked} />\r\n                                 {' '}{' '} <label class=\"form-check-label\" >\r\n                                   JURO QUE ESTOS DATOS SON CORRECTOS\r\n                                 </label>\r\n                                  \r\n                            </div>\r\n                          </div>\r\n\r\n                        {this.state.isHidden && <button\r\n                            type=\"submit\"\r\n                            id=\"sub1\"\r\n                            className=\"btn btn-primary\" \r\n                            type=\"submit\" onClick={this.postRegistro(token)}>Enviar Regimen</button>}\r\n                                    \r\n                      </form>\r\n          </main>\r\n    \r\n      );\r\n  }\r\n}\r\n","import dacsEmpresas from \"dacs-empresas\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst api_notificacion = 'https://60a829368532520017ae5a5f.mockapi.io/notificaciones';\r\n// import notificar from './notificacion.component';\r\n\r\ndacsEmpresas.getNotificacion(api_notificacion,\"9a9c8b7e-c249-4cb5-a171-655502d0c89e\").then().then(sal => localStorage.setItem(\"notificacion\",JSON.stringify(sal)))\r\nvar notif = JSON.parse(localStorage.getItem(\"notificacion\"));\r\n\r\n\r\nexport default class PrincipalPage extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n               <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                <div id=\"descripcion\">{notif}</div>\r\n                <button type=\"button\" class=\"close\" data-bs-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <main role=\"main\" class=\"inner cover\" id=\"central\" >\r\n                <main>\r\n                    <h1 class=\"cover-heading\">Una empresa que vende ripio.</h1>\r\n                    <p class=\"lead\">Vendemos un par de cosas mas, pero tambien tenemos ripio.</p>\r\n                </main>\r\n            </main>          \r\n            </main>\r\n        \r\n          );\r\n      }\r\n}","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nexport const LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <button  class=\"btn btn-outline-secondary btn-sm\" onClick={() => logout({ returnTo: window.location.origin })}>\r\n      Cerrar sesion\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nexport const LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button  class=\"btn btn-outline-secondary btn-sm text-right\"  onClick={() => loginWithRedirect()}>\r\n      Iniciar sesion\r\n      </button>;\r\n};\r\nexport default LoginButton;\r\n\r\n","import React from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nvar style = {\r\n    backgroundColor: \"#333\",\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nvar phantom = {\r\n  display: 'block',\r\n /*  padding: '20px',\r\n  height: '60px', */\r\n  width: '100%',\r\n}\r\n\r\nfunction Footer({ children }) {\r\n    return (\r\n        <div >\r\n            <div style={phantom} />\r\n            <div style={style}>\r\n                { children } <p>Pagina para la empresa <a href=\"https://getbootstrap.com/\">Los enripiadores</a>, by <a href=\"https://cdn.memegenerator.es/imagenes/memes/full/31/39/31392168.jpg\">Grupo8</a>.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React, { Component } from \"react\";\r\nimport './App.css';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport ProductList from './components/servicios.component'\r\nimport PrincipalPage from \"./components/principal.component\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport {LogoutButton} from \"./components/logout.component\";\r\nimport {LoginButton} from \"./components/login.component\";\r\nimport Footer from \"./components/footer.component\";\r\n\r\nfunction App() {\r\n  const{ isAuthenticated } = useAuth0();\r\n  \r\n\r\n\r\n\r\n    return (\r\n      \r\n<div className='text-center'>\r\n\r\n  <header className=\"navbar navbar-expand navbar-dark flex-column flex-md-row bd-navbar\">\r\n    \r\n       \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">               \r\n              <h4 className=\"\">\r\n                <a href=\"/principal\" className=\"h4 text-left\">\r\n                      Corralon Nak\r\n                </a>\r\n              </h4>\r\n              <ul className=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\"> \r\n                    {isAuthenticated ? (\r\n                    <>  \r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\">\r\n                    <Link to={\"/principal\"}>\r\n                      Principal\r\n                    </Link>\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\">\r\n                    <Link to={\"/servicios\"}>\r\n                        Servicios\r\n                    </Link>\r\n                  </a> \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <LogoutButton/> \r\n                </li>\r\n                  </>\r\n                  ) : (\r\n                    <li className=\"nav-item\">\r\n                        <Link to={\"/\"}>\r\n                          <LoginButton />\r\n                        </Link>\r\n                    </li>\r\n                  )}\r\n              </ul>\r\n            </div>\r\n   \r\n  </header> \r\n  <div className=\"container mt-3\">\r\n    <Switch>\r\n      <Route exact path={[\"/servicios\"]} component={ProductList} />\r\n      <Route exact path={[\"/principal\"]} component={PrincipalPage} />\r\n    </Switch>\r\n  </div>\r\n {/*  <footer className=\"mastfoot mt-auto text-center footerpin\">\r\n      <div className=\"inner\">\r\n          <p>Pagina para la empresa <a href=\"https://getbootstrap.com/\">Los enripiadores</a>, by <a href=\"https://cdn.memegenerator.es/imagenes/memes/full/31/39/31392168.jpg\">Grupo8</a>.</p>\r\n      </div>\r\n  </footer>   */}\r\n  <Footer/> \r\n  <hr></hr>\r\n  <hr></hr>\r\n  <hr></hr>\r\n  <hr></hr>\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Auth0Provider } from '@auth0/auth0-react'\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <React.StrictMode>\r\n      <Auth0Provider \r\n      domain=\"grupo8-tpi.us.auth0.com\" \r\n      clientId=\"CXKqDkfXlEjROqsE4X6vTvElHHuqYBxc\" \r\n      redirectUri={window.location.origin}\r\n      useRefreshTokens\r\n      cacheLocation=\"localstorage\">\r\n        <App />\r\n      </Auth0Provider>\r\n    </React.StrictMode>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}